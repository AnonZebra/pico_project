$hexagon-side-length: 100px;
$hexagon-border-width: 4px;

// report main element
.grid-main-report {
    align-items: center;
}

// report box
.report-box-list {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-gap: 0.2rem;
}

.report-box-li {
    display: grid;
    justify-content: center;
}

.report-box {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    text-align: center;
}

.report-box > .report-box-inner {
    margin: $hexagon-side-length * 0.5 $hexagon-border-width * 4;
    z-index: 1;
}

.report-box-inner > h2 {
    color: #000;
    margin: 0 0 0.2em;
}

.report-box:hover > .report-box-inner > h2,
.report-box:active > .report-box-inner > h2,
a:active > .report-box > .report-box-inner > h2 {
    color: $alt-color;
}

.report-box-inner > p {
    color: #fff;
    margin: 0;
}

.report-box-inner > img {
    height: auto;
    width: $hexagon-side-length;
}

/* hexagon based on https://stackoverflow.com/questions/19418486/hexagon-shape-with-a-border-outline
and https://css-tricks.com/snippets/css/hexagon-with-shadow/ */
.hexagon {
    position: relative;
    height: $hexagon-side-length * 2.414;
    width: $hexagon-side-length * 2.414;
    background: $base-color;
    color: #fff;
}

.hexagon::before,
.double::after {
    position: absolute;
    content: '';
}

.hexagon::before {
    top: $hexagon-border-width;  /* border width */
    left: $hexagon-border-width;  /* border width */
    height: calc(100% - #{$hexagon-border-width * 2});  /* 100% - (2 * border width) */
    width: calc(100% - #{$hexagon-border-width * 2});  /* 100% - (2 * border width) */
    background: #fff;
}

.hexagon,
.hexagon::before,
.double::after {
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.double::after {
    top: 8px;
    left: 8px;
    height: calc(100% - 16px);
    width: calc(100% - 16px);
    background: $base-color;
}

// specifications/modifications for the report-project hexagon
.report-project {
    display: grid;
    justify-content: center;
}

.report-project > a > .report-box > .report-box-inner > h2 {
    font-size: 2em;
}

.report-project > a > .hexagon {
    height: $hexagon-side-length * 2.414 * 2;
    width: $hexagon-side-length * 2.414 * 2;
}

.report-project > a > .report-box > .report-box-inner {
    margin: $hexagon-side-length * 0.5 * 2 $hexagon-border-width * 4 * 2;
}

.report-project > a > .report-box > .report-box-inner > img {
    width: $hexagon-side-length * 2;
}

// rearranging/resizing hexagons and main element, based on screen width
@media only screen and (max-width: $hexagon-side-length * 2.4 * 3 + $hexagon-side-length * 0.5) {
    .report-box-list {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr 1fr;
    }

    .grid-main-report {
        grid-template-rows: 0.3fr 3fr 1.5fr;
    }
}

@media only screen and (max-width: $hexagon-side-length * 2.4 * 2 + $hexagon-side-length * 0.5) {
    .report-box-list {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr;
    }

    .grid-main-report {
        grid-template-rows: 0.3fr 6fr 1.5fr;
    }
}

@media only screen and (max-width: $hexagon-side-length * 2.414 * 2 + $hexagon-side-length * 1) {
    .report-project > a > .hexagon {
        height: $hexagon-side-length * 2.414 * 1.4;
        width: $hexagon-side-length * 2.414 * 1.4;
    }

    .report-project > a > .report-box > .report-box-inner {
        margin: $hexagon-side-length * 0.5 * 1.4 $hexagon-border-width * 4 * 2;
    }

    .report-project > a > .report-box > .report-box-inner > img {
        width: $hexagon-side-length * 1.4;
    }
}
